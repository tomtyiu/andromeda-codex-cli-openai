"use strict";var C=Object.create;var l=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,F=Object.prototype.hasOwnProperty;var j=(t,n)=>{for(var s in n)l(t,s,{get:n[s],enumerable:!0})},g=(t,n,s,f)=>{if(n&&typeof n=="object"||typeof n=="function")for(let w of M(n))!F.call(t,w)&&w!==s&&l(t,w,{get:()=>n[w],enumerable:!(f=E(n,w))||f.enumerable});return t};var v=(t,n,s)=>(s=t!=null?C(N(t)):{},g(n||!t||!t.__esModule?l(s,"default",{value:t,enumerable:!0}):s,t)),y=t=>g(l({},"__esModule",{value:!0}),t);var $={};j($,{activate:()=>D,deactivate:()=>P});module.exports=y($);var e=v(require("vscode")),c=v(require("fs/promises")),p=v(require("path")),x=v(require("os"));function D(t){let n=e.commands.registerCommand("codex.prompt",async()=>{let o=await e.window.showInputBox({prompt:"Enter a prompt for Codex"});if(!o){e.window.showWarningMessage("No prompt entered.");return}let i=e.window.activeTextEditor;if(!i){e.window.showErrorMessage("No active editor found.");return}let a=i.document.uri.fsPath,d=i.document.getText(),r=await c.mkdtemp(p.join(x.tmpdir(),"codex-prompt-")),m=p.join(r,"input.txt");await c.writeFile(m,d,"utf8");let u=o.replace(/"/g,'\\"'),h=e.window.createTerminal({name:"Codex"});h.show(!0),h.sendText(`npx codex "${u} ${a}"`,!0)}),s=e.commands.registerCommand("codex.model",async()=>{let o=await e.window.showInputBox({prompt:"Enter a prompt for Codex (Model o4-mini)"});if(!o){e.window.showWarningMessage("No prompt entered.");return}let i=e.window.activeTextEditor;if(!i){e.window.showErrorMessage("No active editor found.");return}let a=i.document.uri.fsPath,d=e.window.createTerminal({name:"Codex Model"});d.show(!0);let r=o.replace(/"/g,'\\"');d.sendText(`npx codex --model o4-mini "${r}" "${a}"`,!0)}),f=e.commands.registerCommand("codex.fixCode",async()=>{let o=e.window.activeTextEditor;if(!o){e.window.showErrorMessage("No active editor found.");return}let i=o.selection;if(i.isEmpty){e.window.showWarningMessage("No code selected.");return}let a=o.document.getText(i),d=await c.mkdtemp(p.join(x.tmpdir(),"codex-term-")),r=p.join(d,"input.txt");await c.writeFile(r,a,"utf8");let m=e.window.createTerminal({name:"Codex Fix"});m.show(!0),m.sendText(`npx codex "fix ${r}"`,!0)}),w=e.commands.registerCommand("codex.editCode",async()=>{let o=e.window.activeTextEditor;if(!o){e.window.showErrorMessage("No active editor found.");return}let i=o.selection;if(i.isEmpty){e.window.showWarningMessage("No code selected.");return}let a=o.document.getText(i),d=o.document.uri.fsPath,r=await c.mkdtemp(p.join(x.tmpdir(),"codex-term-")),m=p.join(r,"input.txt");await c.writeFile(m,a,"utf8");let u=e.window.createTerminal({name:"Codex Edit"});u.show(!0),u.sendText(`npx codex "edit ${m} in file ${d}"`,!0)}),T=e.commands.registerCommand("codex.findUnitTest",async()=>{let o=e.window.activeTextEditor;if(!o){e.window.showErrorMessage("No active editor found.");return}let i=o.selection;if(i.isEmpty){e.window.showWarningMessage("No code selected.");return}let a=o.document.getText(i),d=o.document.uri.fsPath,r=await c.mkdtemp(p.join(x.tmpdir(),"codex-term-")),m=p.join(r,"input.txt");await c.writeFile(m,a,"utf8");let u=e.window.createTerminal({name:"Codex Create Unit Test"});u.show(!0),u.sendText(`npx codex "create unit test ${d}"`,!0)});t.subscriptions.push(n,s,f,w,T)}function P(){}0&&(module.exports={activate,deactivate});
